.text-field {
  --padding-legend: 0.25rem;

  .input-box {
    position: relative;

    display: inline-flex;
    align-items: center;

    inline-size: 100%;

    border-radius: var(--shape-border-radius-2);

    label {
      color: var(--palette-text-disabled);

      position: absolute;
      inset-block-start: 0;
      inset-inline-start: 0;
      overflow: hidden;
      z-index: 1;

      transform: translate(var(--padding-inline), var(--padding-block)) scale(1);
      transform-origin: 0;

      transition: 0.2s ease-in-out;
      transition-property: transform, background-color;

      pointer-events: none;
    }

    fieldset {
      position: absolute;
      inset: 0;

      border: 1px solid var(--palette-shared-input-outlined);
      border-radius: inherit;

      transition: border-color 0.1s cubic-bezier(0.4, 0, 0.2, 1);

      pointer-events: none;

      legend {
        visibility: hidden;

        overflow: hidden;

        display: block;

        inline-size: auto;
        max-inline-size: 0.01px;
        height: 0;

        margin-inline-start: calc(
          var(--padding-inline) - var(--padding-legend)
        );
        padding: 0;

        font-size: 0.75em;

        white-space: nowrap;

        transition: max-inline-size 50ms cubic-bezier(0, 0, 0.2, 1);

        float: unset;

        > span {
          opacity: 0;
          visibility: visible;

          display: inline-block;

          padding-inline: var(--padding-legend);
        }
      }
    }

    .content {
      display: flex;
      align-items: center;

      inline-size: 100%;

      input {
        flex: 1;

        background-color: transparent;

        display: block;

        padding: var(--padding-block) var(--padding-inline);

        border: none;

        outline: none;

        font-size: 1rem;

        appearance: none;
      }

      .adornment {
        color: var(--palette-action-active);
      }

      &:has(.adornment) {
        &:has(.start) {
          padding-inline-start: var(--padding-inline);

          input {
            padding-inline-start: 0;
          }
        }

        &:has(.end) {
          padding-inline-end: var(--padding-inline);

          input {
            padding-inline-end: 0;
          }
        }
      }
    }

    &:where(:hover:has(input:not(:disabled))) {
      fieldset {
        border-color: var(--palette-text-primary);
      }
    }
  }

  .helper-text {
    color: var(--palette-text-secondary);

    margin: 0.5rem 1rem 0;

    font-size: 0.75rem;
  }

  &.small {
    --padding-block: 0.5rem;
    --padding-inline: 1rem;
  }

  &.normal {
    --padding-block: 1rem;
    --padding-inline: 1rem;
  }

  &:where(
      .float,
      :has(.adornment),
      :has(input:not(:placeholder-shown)),
      :focus-within
    ) {
    .input-box {
      label {
        color: var(--palette-text-secondary);

        transform: translate(var(--padding-inline), -50%) scale(0.75);

        font-weight: 600;
      }

      fieldset {
        legend {
          max-inline-size: 100%;

          transition: max-inline-size 100ms cubic-bezier(0, 0, 0.2, 1) 50ms;
        }
      }
    }
  }

  &:where(:focus-within) {
    .input-box {
      label {
        color: var(--palette-text-primary);
      }

      fieldset {
        border: 2px solid var(--palette-text-primary);
      }
    }
  }

  &:where(.error) {
    .input-box {
      label {
        color: var(--palette-error-main);
      }

      fieldset {
        color: var(--palette-error-main);

        border-color: var(--palette-error-main);
      }
    }

    .helper-text {
      color: var(--palette-error-main);
    }
  }

  &:has(input[disabled]) {
    .input-box {
      label {
        color: var(--palette-action-disabled);
      }

      fieldset {
        input {
          color: var(--palette-action-disabled);
        }
      }
    }
  }
}
